/********************************************************
+*   (c) JaylyMC. All rights reserved.                    *
+*********************************************************/

{
  "format_version": "1.10.0",
  "animation_controllers": {
    "controller.animation.terminator.spawns": {
      "initial_state": "default_state",
      "states": {
        "default_state": {
          "transitions": [{"regeneration": "q.is_alive && q.health < 20"}],
          "on_entry": ["/tellraw @a {\"rawtext\":[{\"translate\":\"multiplayer.player.joined\",\"with\":{\"rawtext\":[{\"selector\":\"@s\"}]}}"] // remove end portal sound effect
        },
        "regeneration":{
          "on_entry": [
            "/effect @s[tag=!terminatorNoRegeneration] regeneration 6 4 false",
            "/effect @s[tag=!terminatorNoRegeneration] absorption 24 3 false",
            "/effect @s[tag=!terminatorNoRegeneration] resistance 60 0 false",
            "/effect @s[tag=!terminatorNoRegeneration] fire_resistance 60 0 false",
            "/event entity @s[tag=!terminatorNoRegeneration] terminator:escape"
          ]
        }
      }
    },
    "controller.animation.terminator.sitting": {
      "initial_state": "default_state",
      "states": {
        "default_state": {
          "on_entry": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.sitting/default\"}]}" // logging
          ],
          "transitions": [
            // q.has_target ? (q.target -> q.has_any_family('player')) : 0.0
            { "cooldown_state": "(q.is_sitting > 0.0 || q.is_riding > 0.0 || q.sit_amount > 0.0) && ((q.has_target ? (q.target -> q.has_any_family('player')) : 0.0) || (q.has_target ? (q.target -> q.has_any_family('irongolem')) : 0.0))" }
          ]
        },
        "cooldown_state": {
          "on_entry":[
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.sitting/cooldown/on_entry\"}]}", // logging
            "v.random = math.random_integer(60,100); v.tstime_stamp = q.time_stamp;"
          ],
          "transitions": [{"default_state": "(q.time_stamp - v.tstime_stamp) >= v.random"}],
          "on_exit": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.sitting/cooldown/on_exit\"}]}", // logging
            "/kill @e[type=boat,r=1,c=1]",
            "/kill @e[type=minecart,r=1,c=1]"
          ] // force the mob to leave the boat
        }
      }
    },
    "controller.animation.terminator.bridging": {
      "initial_state": "default_state",
      "states": {
        "default_state": {
          "transitions": [
            { "bridge.east": "q.target_y_rotation <= 45 && q.target_y_rotation > -45" },
            { "bridge.south": "q.target_y_rotation <= 135 && q.target_y_rotation > 45" },
            { "bridge.west": "q.target_y_rotation <= 225 && q.target_y_rotation > 135"},
            { "bridge.north": "q.target_y_rotation <= 315 && q.target_y_rotation > 225"}
          ]
        },
        "bridge.east": {
          "transitions": [{"default_state": "(1.0)"}],
          "on_entry": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.bridging/bridge.east\"}]}", // logging
            "/execute @s ~ ~ ~ fill ~ ~-1 ~1 ~ ~-1 ~1 cobblestone 0 replace air"
          ] 
        },
        "bridge.south": {
          "transitions": [{"default_state": "(1.0)"}],
          "on_entry": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.bridging/bridge.south\"}]}", // logging
            "/execute @s ~ ~ ~ fill ~-1 ~-1 ~ ~-1 ~-1 ~ cobblestone 0 replace air"
          ] 
        },
        "bridge.west": {
          "transitions": [{"default_state": "(1.0)"}],
          "on_entry": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.bridging/bridge.west\"}]}", // logging
            "/execute @s ~ ~ ~ fill ~ ~-1 ~-1 ~ ~-1 ~-1 cobblestone 0 replace air"
          ]
        },
        "bridge.north": {
          "transitions": [{"default_state": "(1.0)"}],
          "on_entry": [
            "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.bridging/bridge.north\"}]}", // logging
            "/execute @s ~ ~ ~ fill ~1 ~-1 ~ ~1 ~-1 ~ cobblestone 0 replace air"
          ]
        }
      }
    },
    "controller.animation.terminator.shield": {
      "initial_state": "default_state",
      "states": {
        "default_state":{
          "transitions": [
            {"running_state": "q.get_equipped_item_name('off_hand') == 'shield'"},
            {"default_state": "(1.0)"}
          ],
          "on_entry": [ "/tellraw @a[tag=dev] {\"rawtext\":[{\"text\": \"[\"},{\"selector\": \"@s\"}, {\"text\": \"] controller.animation.terminator.shield/detect_state\"}]}" ],
          "on_exit": [ "v.shield_cooldown = 5; v.shield_time = q.time_stamp;" ]
        },
        "running_state": {
          "transitions": [
            {"default_state": "q.get_equipped_item_name('off_hand') != 'shield'"},
            {"activate_shield": "q.get_equipped_item_name('off_hand') == 'shield' && variable.attack_time == 0.0"}
          ]
        },
        "activate_shield": {
          "transitions": [
            {"default_state": "q.get_equipped_item_name('off_hand') != 'shield'"},
            {"deactivate_shield": "(q.get_equipped_item_name('off_hand') == 'shield' && variable.attack_time > 0.0) || (q.mark_variant == 1 && q.get_equipped_item_name('off_hand') == 'shield')"}
          ],
          "on_entry": [ "@s terminator:activate_shield" ]
        },
        "deactivate_shield": {
          "transitions": [{"default_state": "(q.time_stamp - v.shield_time) > v.shield_cooldown"}],
          "on_entry": [
            "v.shield_cooldown = 5; v.shield_time = q.time_stamp;",
            "@s terminator:deactivate_shield"
          ]
        }
      }
    }
  }
}
